# Runtime environment specifying Python 3.11
runtime: python311

# Command to start your Flask application with Gunicorn as the WSGI server
entrypoint: gunicorn -b :$PORT 'app:app'


# Environment variables configuration
env_variables:
  FLASK_ENV: 'production'  # Specifies the environment (production, development, etc.)
  ENV_MODE: 'production'  # Custom environment variable to specify operational mode

# Handlers define rules for serving static files and routing URLs
handlers:
  - url: /static  # URL path that should be treated as static
    static_dir: static/  # Directory in the project that contains static files
  - url: /.*  # Catch-all pattern for all other URLs
    script: auto  # Automatically route requests to your Flask app

# Instance class specification for App Engine
instance_class: F1  # Specifies the F1 class which is covered under the free tier

# Automatic scaling configuration for managing the scaling behavior of your application
automatic_scaling:
  target_cpu_utilization: 0.90  # Target CPU utilization before scaling up
  max_instances: 1  # Maximum number of instances to scale to
  min_idle_instances: 0  # Minimum number of instances that are always on, set to zero to minimize costs
  max_idle_instances: 1  # Maximum number of idle instances
  min_pending_latency: 30ms  # Minimum time a request waits in the queue before it's served
  max_pending_latency: automatic  # Maximum time a request is allowed to wait

# Environment type, standard or flexible; standard does not allow custom runtime or network settings
env: standard

# Beta settings are used to access beta features
#beta_settings:
#  cloud_sql_instances: "tidy-nomad-415320:us-west1:mainsql"  # Connects the app to a specific Cloud SQL instance
#  cloud_sql_instances: "tidy-nomad-415320:us-west1:mainsql"


# Optional VPC access connector for accessing Google Cloud resources within a VPC
# vpc_access_connector:
#   name: "projects/tidy-nomad-415320/locations/us-west1/connectors/vpc-connector"

# Ensures sensitive data management through Google Cloud's Secret Manager
# Note: Use Secret Manager for managing sensitive environment variables securely

# Enables Google Cloud's operations suite for better logging and monitoring
runtime_config:
  python_version: 3

# Ensure sessions are managed securely (if using sessions)
# session_affinity: true  # Uncomment if session affinity is required